# Đề 14: Đếm số bit '1' trong SW[9:0] và hiển thị HEX[1:0]
# Kết quả hiển thị dạng thập phân trên 2 LED 7 đoạn

.data
SEVEN_SEG_DECODE_TABLE: 
    .byte 0b00111111, 0b00000110, 0b01011011, 0b01001111
    .byte 0b01100110, 0b01101101, 0b01111101, 0b00000111
    .byte 0b01111111, 0b01100111, 0b00000000, 0b00000000
    .byte 0b00000000, 0b00000000, 0b00000000, 0b00000000

.equ LEDS, 0xff200000
.equ SWITCHES, 0xff200040
.equ HEX, 0xff200020

.text
.global _start
_start:
	li sp, 0x03FFFFFC
	
main_loop:
	la t0, SWITCHES
	lw t1, 0(t0)
	andi a0, t1, 0xFFFFFFFF
	
	jal ra, kiemtraxuathien1
	
	# Hiển thị kết quả trên HEX
	mv a1, a0
	jal ra, hien_thi_hex
	
	j main_loop
	
kiemtraxuathien1:
	addi sp, sp, -12
	sw s0, 0(sp)
	sw s1, 4(sp)
	sw ra, 8(sp)
	
	mv s0, a0 # s0 = 0
	li s1, 0 # s1 = count
	
dem_bit_1_loop:	
	bne s0, zero, kiem_tra_bit # Nếu N != 0 thì kiểm tra
	j dem_bit_1_end
	
kiem_tra_bit:
	andi t0, s0, 1
	bne t0, zero, tang_count
	j dich_bit
	
tang_count:
	addi s1, s1, 1
	
dich_bit:
	srli s0, s0, 1
	j dem_bit_1_loop
	
dem_bit_1_end:
	mv a0, s1
	
	lw s0, 0(sp)
	lw s1, 4(sp)
	lw ra, 8(sp)
	addi sp, sp, 12
	
	ret
	
# Hàm hiển thị số thập phân trên HEX[1:0]
# Input: a1 = số cần hiển thị (0-10)
# Output: Hiển thị trên HEX[1:0]
hien_thi_hex:
	addi sp, sp, -16
	sw s0, 0(sp) # số ban đầu
	sw s1, 4(sp) # hàng chục
	sw s2, 8(sp) # hàng đơn vị
	sw ra, 12(sp)
	
	mv s0, a1
	
	# Tách hàng chục và đơn vị (số / 10, số % 10)
	li s1, 0
	mv s2, s0
	
	# Tính hàng chục bằng cách trừ 10 liên tiếp
	li t0, 10
	
tach_hang_chuc:
	blt s2, t0, tach_xong # s2 < 10 thì xong
	sub s2, s2, t0 # s2 -= 10
	addi s1, s1, 1 # hàng chục++
	j tach_hang_chuc
	
tach_xong:
	# Chuyển đổi sang mã 7 đoạn
	mv a0, s1 # Chuyển hàng chục
	jal ra, chuyen_doi_led_7_doan
	mv t1, a0
	
	mv a0, s2 # Chuyển hàng đơn vị
	jal ra, chuyen_doi_led_7_doan
	mv t2, a0
	
	# Kết hợp HEX1 (hàng chục) và HEX2 (hàng đơn vị)
	slli t1, t1, 8 # HEX1 ở bits [15:8]
	or t1, t1, t2
	
	# Ghi ra HEX display
	li t0, HEX
	sw t1, 0(t0)
	
	lw s0, 0(sp)
	lw s1, 4(sp)
	lw s2, 8(sp)
	lw ra, 12(sp)
	addi sp, sp, 16
	
	ret
	
# Hàm chuyển đổi số (0-9) sang mã 7 đoạn sử dụng bảng lookup
# Input: a0 = số (0-9)
# Output: a0 = mã 7 đoạn
chuyen_doi_led_7_doan:
	addi sp, sp, -8
	sw s0, 0(sp)
	sw ra, 4(sp)
	
	mv s0, a0
	
	# Kiểm tra phạm vi hợp lệ (0-9)
	li t0, 9
	blt s0, zero, invalid # < 0 thì invalid
	bgt s0, t0, invalid # > 9 thì invalid
	
	# Lấy địa chỉ bảng và cộng offset
	la t0, SEVEN_SEG_DECODE_TABLE
	add t0, t0, s0 # trỏ đến bit thứ N trong bảng
	lb a0, 0(t0)
	j chuyen_doi_end
	
invalid:
	li a0, 0b00000000
	
chuyen_doi_end:
	lw s0, 0(sp)
	lw ra, 4(sp)
	addi sp, sp, 8
	
	ret


# TEST CASES:
# SW[9:0] = 0000000000 (0x000): HEX = "00"  0 bit '1'
# SW[9:0] = 0000000001 (0x001): HEX = "01"  1 bit '1'
# SW[9:0] = 0000000011 (0x003): HEX = "02"  2 bit '1' (chỉ bit 0,1)
# SW[9:0] = 0000001111 (0x00F): HEX = "04"  4 bit '1'
# SW[9:0] = 0001111111 (0x07F): HEX = "07"  7 bit '1'
# SW[9:0] = 1111111111 (0x3FF): HEX = "10"  10 bit '1' (tất cả bit)
# SW[9:0] = 1010101010 (0x2AA): HEX = "05"  5 bit '1'
# SW[9:0] = 1100110011 (0x333): HEX = "06"  6 bit '1'