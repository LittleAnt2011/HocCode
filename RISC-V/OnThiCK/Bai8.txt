# Đề 8: Đếm có bao nhiêu số chia cho 3 dư 1 trong A và B
# A = SW[3:0], B = SW[7:4]

.equ LEDS, 0xff200000
.equ SWITCHES, 0xff200040

.text
.global _start
_start:
	li sp, 0x03FFFFFC
	
main_loop:
	la t0, SWITCHES
	lw t1, 0(t0)
	andi a0, t1, 0xF
	srli t1, t1, 4
	andi a1, t1, 0xF
	
	jal ra, kiem_tra_chia_3_du_1
	
	la t0, LEDS
	sw a0, 0(t0)
	
	j main_loop

kiem_tra_chia_3_du_1:
	addi sp, sp, -16
	sw s0, 0(sp)
	sw s1, 4(sp)
	sw s2, 8(sp)
	sw ra, 12(sp)
	
	mv s0, a0 # s0 = A
	mv s1, a1 # s1 = B
	li s2, 0 # count
	
	#Kiem tra so A
	mv a0, s0
	jal ra, ham_kiem_tra
	add s2, s2, a0
	
	#Kiem tra so B
	mv a0, s1
	jal ra, ham_kiem_tra
	add s2, s2, a0
	
	mv a0, s2
	
	lw s0, 0(sp)
	lw s1, 4(sp)
	lw s2, 8(sp)
	lw ra, 12(sp)
	addi sp, sp, 16
	
	ret
	
#hàm kiểm tra
ham_kiem_tra:
	addi sp, sp, -8
	sw s0, 0(sp) # s0 = so ban dau
	sw ra, 4(sp)
	
	mv s0, a0
	
kiem_tra_loop:
	blt s0, zero, kiem_tra_am # s0 < 0 thì kiểm tra âm
	li t0, 3
	blt s0, t0, kiem_tra_remainder # s0 < 3 thì kiểm tra phần dư (remainder)
	sub s0, s0, t0
	j kiem_tra_loop
	
kiem_tra_am:
	li a0, 0
	j kiem_tra_end
	
kiem_tra_remainder:
	li t0, 1
	bne s0, t0, khong_du_1 # phần dư nào khác 1 sẽ nhảy tới khong_du_1
	li a0, 1
	j kiem_tra_end
	
khong_du_1:
	li a0, 0

kiem_tra_end:
	lw s0, 0(sp)
	lw ra, 4(sp)
	addi sp, sp, 8
	
	ret

	
	