
# Đề 12: Điều khiển dịch bit LED bằng KEY
# KEY[1]: dịch trái, KEY[2]: dịch phải, KEY[3]: đọc switch

.equ LED, 0xff200000
.equ SWITCHES, 0xff200040
.equ KEYS, 0xff200050

.text
.global _start

_start:
	li sp, 0x03FFFFFC
	li s0, 0
	
main_loop:
	jal ra, kiem_tra_nut_nhan # trả giá trị a0 để lựa chọn KEYS [1] hoặc [2] hoặc [3]
	
	# Key 1
	li t0, 1
	beq t0, a0, run_key_1
	
	# Key 2
	li t0, 2
	beq t0, a0, run_key_2
	
	# Key 3
	li t0, 3
	beq t0, a0, run_key_3
	j main_loop
	
run_key_1:
	slli s0, s0, 1
	j cap_nhap_led
	
run_key_2:
	srli s0, s0, 1
	j cap_nhap_led
	
run_key_3:
	la t0, SWITCHES
	lw s0, 0(t0)
	
cap_nhap_led:
	la t0, LED
	sw s0, 0(t0)
	
doi_tha_nut: # để khi ko nhấn nút thì chỉ chạy trong đợi_thả_nút, tránh dịch liên tục
	jal ra, kiem_tra_nut_nhan # trả giá trị a0
	bne a0, zero, doi_tha_nut # a0 khác 0 thì tiếp tục lặp, a0 = 0 thì chương trình bắt đầu
	j main_loop
	
# Hàm con 
kiem_tra_nut_nhan:
	addi sp, sp, -8
	sw s0, 0(sp)
	sw ra, 4(sp)
	
	la t0, KEYS
	lw s0, 0(t0)
	
	# Kiểm tra KEY 1
	andi t1, s0, 0x2 
	bne t1, zero, nhankey1
	
	# Kiểm tra KEY 2
	andi t1, s0, 0x4
	bne t1, zero, nhankey2
	
	# Kiểm tra KEY 3
	andi t1, s0, 0x8
	bne t1, zero, nhankey3
	
	li a0, 0
	j done
	
	
nhankey1:
	li a0, 1
	j done
	
nhankey2:
	li a0, 2
	j done
	
nhankey3:
	li a0, 3
	
done:	
	lw s0, 0(sp)
	lw ra, 4(sp)
	addi sp, sp, 8
	
	ret
	
	
# HƯỚNG DẪN SỬ DỤNG:
# 1. Nhấn KEY[3] để đọc giá trị từ switch vào LED
# 2. Nhấn KEY[1] để dịch pattern trên LED sang trái
# 3. Nhấn KEY[2] để dịch pattern trên LED sang phải
# 4. Pattern sẽ được giữ nguyên cho đến khi có thao tác mới

# TEST CASES:
# - Khởi động: LED = 0 (tất cả tắt)
# - Nhấn KEY[3] với SW = 0x155: LED = 0x155
# - Nhấn KEY[1]: LED = 0x2AA (dịch trái)
# - Nhấn KEY[1] tiếp: LED = 0x154 (dịch trái, overflow bit 10)
# - Nhấn KEY[2]: LED = 0x0AA (dịch phải)
# - Nhấn KEY[3] với SW = 0x001: LED = 0x001 (đọc switch mới)